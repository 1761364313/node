"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const dbConnect_1 = require("../utils/dbConnect");
const error_1 = require("../constants/error");
const findTrans_1 = __importDefault(require("../utils/findTrans"));
const constants_1 = require("../constants/constants");
function fetchFind(table, params, query) {
    if (!table)
        throw new Error(error_1.PARAM_TABLE_ERROR);
    return new Promise((resolve, reject) => {
        let QQ = findTrans_1.default(params, 1, dbConnect_1.mongodb, constants_1.PLATFORM_NAME.MONGODB) || {};
        let sortObj = {};
        if (params.orderBy) {
            let temp = params.orderBy;
            for (let i = 0; i < temp.length; i++) {
                if (temp[i][0] === '-') {
                    sortObj[temp[i].substring(1, temp[i].length)] = -1;
                }
                else {
                    sortObj[temp[i]] = 1;
                }
            }
        }
        if (query === 'sentence') {
            resolve(QQ);
            return;
        }
        dbConnect_1.mongodbCollection((db, client) => {
            db.collection(table).find(QQ)
                .limit(params.limit || 20)
                .skip((params.limit || 20) * ((params.page || 1) - 1))
                .sort(sortObj).toArray(function (err, res) {
                if (err)
                    reject(err);
                client.close();
                resolve({ data: { objects: res || [] } });
            });
        });
    });
}
exports.default = fetchFind;
