"use strict";
/*
 * @Author: your name
 * @Date: 2020-05-18 18:02:23
 * @LastEditTime: 2020-06-06 08:52:41
 * @LastEditors: Please set LastEditors
 * @Description: In User Settings Edit
 * @FilePath: /@ownpack/weapp/src/fetch/data/get.ts
 */
Object.defineProperty(exports, "__esModule", { value: true });
const dbConnect_1 = require("../utils/dbConnect");
const utils_1 = require("../utils/utils");
function fetchGet(table, uniKey, query) {
    let tempQuery = (query === 'sentence' || !query) ? {} : query;
    return new Promise((resolve, reject) => {
        let selectArr = [];
        let tempID = 'id', tempData;
        if (utils_1.isJson(uniKey)) {
            for (let p in uniKey) {
                tempID = p;
                tempData = uniKey[p];
                break;
            }
        }
        else {
            tempData = uniKey;
        }
        if (tempQuery.select) {
            if (utils_1.isArray(tempQuery.select)) {
                let tempPa = tempQuery.select;
                selectArr = tempPa.length > 0 ? tempPa : ['*'];
            }
            else {
                let tempPa2 = tempQuery.select;
                selectArr = [tempPa2];
            }
        }
        else {
            selectArr = ['*'];
        }
        let sql = '';
        sql = `SELECT ${selectArr.length > 0 ? selectArr.toString() + ' ' : '* '}`
            + `FROM ${table} `
            + `WHERE ${tempID} = ${utils_1.isNumber(tempData) ? tempData : `'${tempData}'`}`;
        if (query === 'sentence') {
            resolve(sql);
            return;
        }
        dbConnect_1.mysqlConnect(sql, [], (err, results) => {
            if (err) {
                reject({ err });
            }
            let jsonStr = JSON.stringify(results || []);
            resolve({ data: JSON.parse(jsonStr)[0] || {} });
        });
    });
}
exports.default = fetchGet;
