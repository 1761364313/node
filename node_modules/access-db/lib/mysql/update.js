"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const dbConnect_1 = require("../utils/dbConnect");
const utils_1 = require("../utils/utils");
const updateTrans_1 = __importDefault(require("../utils/updateTrans"));
const constants_1 = require("../constants/constants");
function fetchUpdate(table, uniKey, params = {}, query) {
    return new Promise((resolve, reject) => {
        let tempID = 'id', tempData;
        if (utils_1.isJson(uniKey)) {
            for (let p in uniKey) {
                tempID = p;
                tempData = uniKey[p];
                break;
            }
        }
        else {
            tempData = uniKey;
        }
        let updata = updateTrans_1.default(params, [], constants_1.PLATFORM_NAME.MYSQL);
        let sql = `UPDATE ${table} SET ${updata.toString()} WHERE ${tempID} = ${utils_1.isNumber(tempData) ? tempData : `'${tempData}'`}`;
        if (query === 'sentence') {
            resolve(sql);
            return;
        }
        dbConnect_1.mysqlConnect(sql, [], (err, results) => {
            if (err) {
                reject({ err });
            }
            let jsonStr = JSON.stringify(results || {});
            resolve({ data: JSON.parse(jsonStr) });
        });
    });
}
exports.default = fetchUpdate;
