"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/*
 * @Author: your name
 * @Date: 2020-05-18 18:02:23
 * @LastEditTime: 2020-06-06 08:57:53
 * @LastEditors: Please set LastEditors
 * @Description: In User Settings Edit
 * @FilePath: /@ownpack/weapp/src/fetch/data/setOneMany.ts
 */
const dbConnect_1 = require("../utils/dbConnect");
const utils_1 = require("../utils/utils");
const error_1 = require("../constants/error");
const setTrans_1 = __importDefault(require("../utils/setTrans"));
const constants_1 = require("../constants/constants");
function fetchSetmany(table, params, query) {
    if (!utils_1.isArray(params))
        throw new Error(error_1.SET_MANY_PARAMS_ARR_ERROR);
    return new Promise((resolve, reject) => {
        let fields = [];
        let values = [];
        for (let i = 0; i < params.length; i++) {
            let tempSet = setTrans_1.default(params[i], {}, constants_1.PLATFORM_NAME.MYSQL);
            if (i === 0)
                fields = tempSet.fieldsArr;
            values.push(`(${tempSet.valuesArr.toString()})`);
        }
        let sql = `INSERT INTO ${table}(${fields.toString()}) VALUES ${values.toString()}`;
        if (query === 'sentence') {
            resolve(sql);
            return;
        }
        dbConnect_1.mysqlConnect(sql, [], (err, results) => {
            if (err) {
                reject({ err });
            }
            let jsonStr = JSON.stringify(results || {});
            resolve({ data: JSON.parse(jsonStr) });
        });
    });
}
exports.default = fetchSetmany;
